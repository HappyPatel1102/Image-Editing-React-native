{"version":3,"sources":["../../src/filters/Negative.js"],"names":["Negative","shaders","Shaders","create","negative","frag","GLSL","factor","t","children"],"mappings":";;;;;;;;kBAoBwBA,Q;;AApBxB;;AACA;;;;;;;;AAEA,IAAMC,UAAUC,iBAAQC,MAAR,CAAe;AAC7BC,YAAU;AACRC,cAAMC,aAAN;AADQ;AADmB,CAAf,CAAhB;;AAiBe,SAASN,QAAT,OAA+C;AAAA,yBAA3BO,MAA2B;AAAA,MAA3BA,MAA2B,+BAAlB,CAAkB;AAAA,MAALC,CAAK,QAAfC,QAAe;;AAC5D,SACE,8BAAC,aAAD;AACE,YAAQR,QAAQG,QADlB;AAEE,cAAU;AACRG,oBADQ;AAERC;AAFQ;AAFZ,IADF;AASD","file":"Negative.js","sourcesContent":["import { Shaders, Node, GLSL } from \"gl-react\";\nimport React from \"react\";\n\nconst shaders = Shaders.create({\n  negative: {\n    frag: GLSL`\n      precision highp float;\n      varying vec2 uv;\n      uniform sampler2D t;\n      uniform float factor;\n      \n      void main() {\n        vec4 c = texture2D(t, uv);\n\n        gl_FragColor = vec4(mix(c.rgb, 1.0 - c.rgb, factor), c.a);\n      }\n    `\n  }\n});\n\nexport default function Negative({ factor = 0, children: t }) {\n  return (\n    <Node\n      shader={shaders.negative}\n      uniforms={{\n        factor,\n        t,\n      }}\n    />\n  )\n}\n"]}